{"name":"Negotiation","tagline":"Content Negotiation tools for PHP.","body":"Negotiation\r\n===========\r\n\r\n[![Build Status](https://travis-ci.org/willdurand/Negotiation.png?branch=master)](http://travis-ci.org/willdurand/Negotiation)\r\n[![Total Downloads](https://poser.pugx.org/willdurand/Negotiation/downloads.png)](https://packagist.org/packages/willdurand/Negotiation)\r\n[![Latest Stable Version](https://poser.pugx.org/willdurand/Negotiation/v/stable.png)](https://packagist.org/packages/willdurand/Negotiation)\r\n\r\n**Negotiation** is a standalone library without any dependencies that allows you\r\nto implement [content\r\nnegotiation](http://www.w3.org/Protocols/rfc2616/rfc2616-sec12.html) in your\r\napplication, whatever framework you use.\r\nThis library is based on [RFC\r\n2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). Negotiation is\r\neasy to use, and extensively unit tested.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nThe recommended way to install Negotiation is through\r\n[Composer](http://getcomposer.org/):\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"willdurand/negotiation\": \"@stable\"\r\n    }\r\n}\r\n```\r\n\r\n**Protip:** you should browse the\r\n[`willdurand/negotiation`](https://packagist.org/packages/willdurand/negotiation)\r\npage to choose a stable version to use, avoid the `@stable` meta constraint.\r\n\r\n\r\nUsage\r\n-----\r\n\r\nIn a nutshell:\r\n\r\n``` php\r\n<?php\r\n\r\n$negotiator = new \\Negotiation\\Negotiator();\r\n$bestHeader = $negotiator->getBest('en; q=0.1, fr; q=0.4, fu; q=0.9, de; q=0.2');\r\n// $bestHeader = 'fu';\r\n```\r\n\r\nThe `getBest()` method, part of the `NegotiatorInterface`, returns either `null`\r\nor `AcceptHeader` instances. An `AcceptHeader` object owns a `value` and a\r\n`quality`.\r\n\r\n\r\n### Format Negotiation\r\n\r\nThe **Format Negotiation** is handled by the `FormatNegotiator` class.\r\nBasically, pass an `Accept` header and optionally a set of preferred media types\r\nto the `getBest()` method in order to retrieve the best **media type**:\r\n\r\n``` php\r\n<?php\r\n\r\n$negotiator   = new \\Negotiation\\FormatNegotiator();\r\n\r\n$acceptHeader = 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8';\r\n$priorities   = array('text/html', 'application/json', '*/*');\r\n\r\n$format = $negotiator->getBest($acceptHeader, $priorities);\r\n// $format->getValue() = text/html\r\n```\r\n\r\nThe `FormatNegotiator` class also provides a `getBestFormat()` method that\r\nreturns the best format given an `Accept` header string and a set of\r\npreferred/allowed formats or mime types:\r\n\r\n``` php\r\n<?php\r\n\r\n$negotiator   = new \\Negotiation\\FormatNegotiator();\r\n\r\n$acceptHeader = 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8';\r\n$priorities   = array('html', 'application/json', '*/*');\r\n\r\n$format = $negotiator->getBestFormat($acceptHeader, $priorities);\r\n// $format = html\r\n```\r\n\r\n#### Other Methods\r\n\r\n* `registerFormat($format, array $mimeTypes, $override = false)`: registers a new\r\n  format with its mime types;\r\n* `getFormat($mimeType)`: returns the format for a given mime type, or null if\r\nnot found;\r\n* `getMimeTypes(array $formats)`: returns an array of mime types for the given\r\n  set of formats;\r\n* `normalizePriorities($priorities)`: ensures that any formats are converted to\r\n  mime types.\r\n\r\n### Language Negotiation\r\n\r\nLanguage negotiation is handled by the `LanguageNegotiator` class:\r\n\r\n``` php\r\n<?php\r\n\r\n$negotiator = new \\Negotiation\\LanguageNegotiator();\r\n$language   = $negotiator->getBest('da, en-gb;q=0.8, en;q=0.7');\r\n// $language = da\r\n```\r\n\r\n\r\n### Charset/Encoding Negotiation\r\n\r\nCharset/Encoding negotiation works out of the box using the `Negotiator` class:\r\n\r\n``` php\r\n<?php\r\n\r\n$negotiator = new \\Negotiation\\Negotiator();\r\n$priorities = array(\r\n    'utf-8',\r\n    'big5',\r\n    'shift-jis',\r\n);\r\n\r\n$bestHeader = $negotiator->getBest('ISO-8859-1, Big5;q=0.6,utf-8;q=0.7, *;q=0.5', $priorities);\r\n// $bestHeader = 'utf-8'\r\n```\r\n\r\n\r\nUnit Tests\r\n----------\r\n\r\nSetup the test suite using Composer:\r\n\r\n    $ composer install --dev\r\n\r\nRun it using PHPUnit:\r\n\r\n    $ phpunit\r\n\r\n\r\nContributing\r\n------------\r\n\r\nSee CONTRIBUTING file.\r\n\r\n\r\nCredits\r\n-------\r\n\r\n* Some parts of this library are inspired by:\r\n\r\n    * [Symfony](http://github.com/symfony/symfony) framework;\r\n    * [FOSRest](http://github.com/FriendsOfSymfony/FOSRest);\r\n    * [PEAR HTTP2](https://github.com/pear/HTTP2).\r\n\r\n* William Durand <william.durand1@gmail.com>\r\n\r\n\r\nLicense\r\n-------\r\n\r\nNegotiation is released under the MIT License. See the bundled LICENSE file for details.\r\n","google":"UA-28365039-1","note":"Don't delete this file! It's used internally to help with page regeneration."}